)
sum(s.prob.reduced)
sum(s.prob.reduced$Label == 's')
sum(Reduced.Final$Label == 's')
sum(Reduced.Final$Class == 's')
source('~/Desktop/projects/Kaggle/code/submission_prep.R', echo=TRUE)
sum(Reduced.Final$Class == 's')
load("~/Desktop/projects/Kaggle/code/kaggle.RData")
dim(M7.training)
dim(M8.training)
dim(M10.training)
dim(M10.training)
dim(M11.training)
sum(training$Label == 'b')
sum(training$Label == 's')
setwd('/Users/adamcone/Desktop/projects/Kaggle/code')
library(dplyr)
s.prob.reduced = read.table(file = 'S.Prob.Reduce.csv',
header = TRUE,
sep = ',',
stringsAsFactors = FALSE
)
# get rid of extra column
s.prob.reduced = select(s.prob.reduced, -1)
# replace S.Probability column with RankOrder column for submission
Reduced.Final = arrange(s.prob.reduced, by = S.Probability) %>%
mutate(., RankOrder = seq(1, nrow(s.prob.reduced))) %>%
mutate(., Class = ifelse(S.Probability > 0.20, 's', 'b')) %>%
select(., c(EventId,
RankOrder,
Class)
) %>%
arrange(., by = EventId)
write.csv(x = Reduced.Final,
file = 'Reduced_Final.csv',
row.names = FALSE
)
source('~/Desktop/projects/Kaggle/code/submission_prep.R', echo=TRUE)
source('~/Desktop/projects/Kaggle/code/submission_prep.R', echo=TRUE)
setwd('/Users/adamcone/Desktop/projects/Kaggle/code')
library(dplyr)
s.prob.reduced = read.table(file = 'S.Prob.Reduce.csv',
header = TRUE,
sep = ',',
stringsAsFactors = FALSE
)
# get rid of extra column
s.prob.reduced = select(s.prob.reduced, -1)
# replace S.Probability column with RankOrder column for submission
Reduced.Final = arrange(s.prob.reduced, by = S.Probability) %>%
mutate(., RankOrder = seq(1, nrow(s.prob.reduced))) %>%
mutate(., Class = ifelse(S.Probability > 0.34, 's', 'b')) %>%
select(., c(EventId,
RankOrder,
Class)
) %>%
arrange(., by = EventId)
write.csv(x = Reduced.Final,
file = 'Reduced_Final.csv',
row.names = FALSE
)
setwd('/Users/adamcone/Desktop/projects/Kaggle/code')
library(dplyr)
s.prob.reduced = read.table(file = 'S.Prob.Reduce.csv',
header = TRUE,
sep = ',',
stringsAsFactors = FALSE
)
# get rid of extra column
s.prob.reduced = select(s.prob.reduced, -1)
# replace S.Probability column with RankOrder column for submission
Reduced.Final = arrange(s.prob.reduced, by = S.Probability) %>%
mutate(., RankOrder = seq(1, nrow(s.prob.reduced))) %>%
mutate(., Class = ifelse(S.Probability > 0.32, 's', 'b')) %>%
select(., c(EventId,
RankOrder,
Class)
) %>%
arrange(., by = EventId)
write.csv(x = Reduced.Final,
file = 'Reduced_Final.csv',
row.names = FALSE
)
setwd('/Users/adamcone/Desktop/projects/Kaggle/code')
library(dplyr)
s.prob.reduced = read.table(file = 'S.Prob.Reduce.csv',
header = TRUE,
sep = ',',
stringsAsFactors = FALSE
)
# get rid of extra column
s.prob.reduced = select(s.prob.reduced, -1)
# replace S.Probability column with RankOrder column for submission
Reduced.Final = arrange(s.prob.reduced, by = S.Probability) %>%
mutate(., RankOrder = seq(1, nrow(s.prob.reduced))) %>%
mutate(., Class = ifelse(S.Probability > 0.31, 's', 'b')) %>%
select(., c(EventId,
RankOrder,
Class)
) %>%
arrange(., by = EventId)
write.csv(x = Reduced.Final,
file = 'Reduced_Final.csv',
row.names = FALSE
)
setwd('/Users/adamcone/Desktop/projects/Kaggle/code')
library(dplyr)
s.prob.reduced = read.table(file = 'S.Prob.Reduce.csv',
header = TRUE,
sep = ',',
stringsAsFactors = FALSE
)
# get rid of extra column
s.prob.reduced = select(s.prob.reduced, -1)
# replace S.Probability column with RankOrder column for submission
Reduced.Final = arrange(s.prob.reduced, by = S.Probability) %>%
mutate(., RankOrder = seq(1, nrow(s.prob.reduced))) %>%
mutate(., Class = ifelse(S.Probability > 0.305, 's', 'b')) %>%
select(., c(EventId,
RankOrder,
Class)
) %>%
arrange(., by = EventId)
write.csv(x = Reduced.Final,
file = 'Reduced_Final.csv',
row.names = FALSE
)
s.prob.full = read.table(file = 'S.Prob.Full.csv',
header = TRUE,
sep = ',',
stringsAsFactors = FALSE
)
# get rid of extra column
s.prob.full = select(s.prob.full, -1)
# replace S.Probability column with RankOrder column for submission
Reduced.Final = arrange(s.prob.full, by = S.Probability) %>%
mutate(., RankOrder = seq(1, nrow(s.prob.full))) %>%
mutate(., Class = ifelse(S.Probability > 0.31, 's', 'b')) %>%
select(., c(EventId,
RankOrder,
Class)
) %>%
arrange(., by = EventId)
write.csv(x = Full.Final,
file = 'Full_Final.csv',
row.names = FALSE
)
s.prob.full = read.table(file = 'S.Prob.Full.csv',
header = TRUE,
sep = ',',
stringsAsFactors = FALSE
)
# get rid of extra column
s.prob.full = select(s.prob.full, -1)
Reduced.Final = arrange(s.prob.full, by = S.Probability) %>%
mutate(., RankOrder = seq(1, nrow(s.prob.full))) %>%
mutate(., Class = ifelse(S.Probability > 0.31, 's', 'b'))
Reduced.Final = arrange(s.prob.full, by = S.Probability) %>%
mutate(., RankOrder = seq(1, nrow(s.prob.full))) %>%
mutate(., Class = ifelse(S.Probability > 0.31, 's', 'b')) %>%
select(., c(EventId,
RankOrder,
Class)
)
Reduced.Final = arrange(s.prob.full, by = S.Probability) %>%
mutate(., RankOrder = seq(1, nrow(s.prob.full))) %>%
mutate(., Class = ifelse(S.Probability > 0.31, 's', 'b'))
Full.Final = arrange(s.prob.full, by = S.Probability) %>%
mutate(., RankOrder = seq(1, nrow(s.prob.full))) %>%
mutate(., Class = ifelse(S.Probability > 0.31, 's', 'b'))
%>%
select(., c(EventId,
RankOrder,
Class)
)
Full.Final = arrange(s.prob.full, by = S.Probability) %>%
mutate(., RankOrder = seq(1, nrow(s.prob.full))) %>%
mutate(., Class = ifelse(S.Probability > 0.31, 's', 'b'))
names(Full.Final)
s.prob.full = read.table(file = 'S.Prob.Full.csv',
header = TRUE,
sep = ',',
stringsAsFactors = FALSE
)
# get rid of extra column
s.prob.full = select(s.prob.full, -1)
# replace S.Probability column with RankOrder column for submission
Full.Final = arrange(s.prob.full, by = S.Probability) %>%
mutate(., RankOrder = seq(1, nrow(s.prob.full))) %>%
mutate(., Class = ifelse(S.Probability > 0.31, 's', 'b'))
names(Full.Final)
s.prob.full = read.table(file = 'S.Prob.Full.csv',
header = TRUE,
sep = ',',
stringsAsFactors = FALSE
)
# get rid of extra column
s.prob.full = select(s.prob.full, -1)
# replace S.Probability column with RankOrder column for submission
Full.Final = arrange(s.prob.full, by = S.Probability) %>%
mutate(., RankOrder = seq(1, nrow(s.prob.full))) %>%
mutate(., Class = ifelse(S.Probability > 0.31, 's', 'b')) %>%
select(., c(EventId,
RankOrder,
Class)
) %>%
arrange(., by = EventId)
Full.Final = arrange(s.prob.full, by = S.Probability) %>%
mutate(., RankOrder = seq(1, nrow(s.prob.full)))
names(Full.Final)
s.prob.full = read.table(file = 'S.Prob.Full.csv',
header = TRUE,
sep = ',',
stringsAsFactors = FALSE
)
# replace S.Probability column with RankOrder column for submission
Full.Final = arrange(s.prob.full, by = S.Probability) %>%
mutate(., RankOrder = seq(1, nrow(s.prob.full))) %>%
mutate(., Class = ifelse(S.Probability > 0.31, 's', 'b')) %>%
select(., c(EventId,
RankOrder,
Class)
) %>%
arrange(., by = EventId)
write.csv(x = Full.Final,
file = 'Full_Final.csv',
row.names = FALSE
)
s.prob.full = read.table(file = 'S.Prob.Full.csv',
header = TRUE,
sep = ',',
stringsAsFactors = FALSE
)
# replace S.Probability column with RankOrder column for submission
Full.Final = arrange(s.prob.full, by = S.Probability) %>%
mutate(., RankOrder = seq(1, nrow(s.prob.full))) %>%
mutate(., Class = ifelse(S.Probability > 0.10, 's', 'b')) %>%
select(., c(EventId,
RankOrder,
Class)
) %>%
arrange(., by = EventId)
write.csv(x = Full.Final,
file = 'Full_Final.csv',
row.names = FALSE
)
s.prob.full = read.table(file = 'S.Prob.Full.csv',
header = TRUE,
sep = ',',
stringsAsFactors = FALSE
)
# replace S.Probability column with RankOrder column for submission
Full.Final = arrange(s.prob.full, by = S.Probability) %>%
mutate(., RankOrder = seq(1, nrow(s.prob.full))) %>%
mutate(., Class = ifelse(S.Probability > 0.50, 's', 'b')) %>%
select(., c(EventId,
RankOrder,
Class)
) %>%
arrange(., by = EventId)
write.csv(x = Full.Final,
file = 'Full_Final.csv',
row.names = FALSE
)
s.prob.full = read.table(file = 'S.Prob.Full.csv',
header = TRUE,
sep = ',',
stringsAsFactors = FALSE
)
# replace S.Probability column with RankOrder column for submission
Full.Final = arrange(s.prob.full, by = S.Probability) %>%
mutate(., RankOrder = seq(1, nrow(s.prob.full))) %>%
mutate(., Class = ifelse(S.Probability > 0.75, 's', 'b')) %>%
select(., c(EventId,
RankOrder,
Class)
) %>%
arrange(., by = EventId)
write.csv(x = Full.Final,
file = 'Full_Final.csv',
row.names = FALSE
)
s.prob.full = read.table(file = 'S.Prob.Full.csv',
header = TRUE,
sep = ',',
stringsAsFactors = FALSE
)
# replace S.Probability column with RankOrder column for submission
Full.Final = arrange(s.prob.full, by = S.Probability) %>%
mutate(., RankOrder = seq(1, nrow(s.prob.full))) %>%
mutate(., Class = ifelse(S.Probability > 0.90, 's', 'b')) %>%
select(., c(EventId,
RankOrder,
Class)
) %>%
arrange(., by = EventId)
write.csv(x = Full.Final,
file = 'Full_Final.csv',
row.names = FALSE
)
s.prob.full = read.table(file = 'S.Prob.Full.csv',
header = TRUE,
sep = ',',
stringsAsFactors = FALSE
)
# replace S.Probability column with RankOrder column for submission
Full.Final = arrange(s.prob.full, by = S.Probability) %>%
mutate(., RankOrder = seq(1, nrow(s.prob.full))) %>%
mutate(., Class = ifelse(S.Probability > 0.675, 's', 'b')) %>%
select(., c(EventId,
RankOrder,
Class)
) %>%
arrange(., by = EventId)
write.csv(x = Full.Final,
file = 'Full_Final.csv',
row.names = FALSE
)
setwd('/Users/adamcone/Desktop/projects/Kaggle/code')
library(dplyr)
s.prob.reduced = read.table(file = 'S.Prob.Reduce.csv',
header = TRUE,
sep = ',',
stringsAsFactors = FALSE
)
# get rid of extra column
s.prob.reduced = select(s.prob.reduced, -1)
# replace S.Probability column with RankOrder column for submission
Reduced.Final = arrange(s.prob.reduced, by = S.Probability) %>%
mutate(., RankOrder = seq(1, nrow(s.prob.reduced))) %>%
mutate(., Class = ifelse(S.Probability > 0.80, 's', 'b')) %>%
select(., c(EventId,
RankOrder,
Class)
) %>%
arrange(., by = EventId)
write.csv(x = Reduced.Final,
file = 'Reduced_Final.csv',
row.names = FALSE
)
#---------------
s.prob.full = read.table(file = 'S.Prob.Full.csv',
header = TRUE,
sep = ',',
stringsAsFactors = FALSE
)
# replace S.Probability column with RankOrder column for submission
Full.Final = arrange(s.prob.full, by = S.Probability) %>%
mutate(., RankOrder = seq(1, nrow(s.prob.full))) %>%
mutate(., Class = ifelse(S.Probability > 0.675, 's', 'b')) %>%
select(., c(EventId,
RankOrder,
Class)
) %>%
arrange(., by = EventId)
write.csv(x = Full.Final,
file = 'Full_Final.csv',
row.names = FALSE
)
setwd('/Users/adamcone/Desktop/projects/Kaggle/code')
library(dplyr)
s.prob.reduced = read.table(file = 'S.Prob.Reduce.csv',
header = TRUE,
sep = ',',
stringsAsFactors = FALSE
)
# get rid of extra column
s.prob.reduced = select(s.prob.reduced, -1)
# replace S.Probability column with RankOrder column for submission
Reduced.Final = arrange(s.prob.reduced, by = S.Probability) %>%
mutate(., RankOrder = seq(1, nrow(s.prob.reduced))) %>%
mutate(., Class = ifelse(S.Probability > 0.80, 's', 'b')) %>%
select(., c(EventId,
RankOrder,
Class)
) %>%
arrange(., by = EventId)
write.csv(x = Reduced.Final,
file = 'Reduced_Final.csv',
row.names = FALSE
)
#---------------
s.prob.full = read.table(file = 'S.Prob.Full.csv',
header = TRUE,
sep = ',',
stringsAsFactors = FALSE
)
# replace S.Probability column with RankOrder column for submission
Full.Final = arrange(s.prob.full, by = S.Probability) %>%
mutate(., RankOrder = seq(1, nrow(s.prob.full))) %>%
mutate(., Class = ifelse(S.Probability > 0.675, 's', 'b')) %>%
select(., c(EventId,
RankOrder,
Class)
) %>%
arrange(., by = EventId)
write.csv(x = Full.Final,
file = 'Full_Final.csv',
row.names = FALSE
)
s.prob.full = read.table(file = 'S.Prob.Full.csv',
header = TRUE,
sep = ',',
stringsAsFactors = FALSE
)
# replace S.Probability column with RankOrder column for submission
Full.Final = arrange(s.prob.full, by = S.Probability) %>%
mutate(., RankOrder = seq(1, nrow(s.prob.full))) %>%
mutate(., Class = ifelse(S.Probability > 0.80, 's', 'b')) %>%
select(., c(EventId,
RankOrder,
Class)
) %>%
arrange(., by = EventId)
write.csv(x = Full.Final,
file = 'Full_Final.csv',
row.names = FALSE
)
s.prob.full = read.table(file = 'S.Prob.Full.csv',
header = TRUE,
sep = ',',
stringsAsFactors = FALSE
)
# replace S.Probability column with RankOrder column for submission
Full.Final = arrange(s.prob.full, by = S.Probability) %>%
mutate(., RankOrder = seq(1, nrow(s.prob.full))) %>%
mutate(., Class = ifelse(S.Probability > 0.71, 's', 'b')) %>%
select(., c(EventId,
RankOrder,
Class)
) %>%
arrange(., by = EventId)
write.csv(x = Full.Final,
file = 'Full_Final.csv',
row.names = FALSE
)
s.prob.full = read.table(file = 'S.Prob.Full.csv',
header = TRUE,
sep = ',',
stringsAsFactors = FALSE
)
# replace S.Probability column with RankOrder column for submission
Full.Final = arrange(s.prob.full, by = S.Probability) %>%
mutate(., RankOrder = seq(1, nrow(s.prob.full))) %>%
mutate(., Class = ifelse(S.Probability > 0.71, 's', 'b')) %>%
select(., c(EventId,
RankOrder,
Class)
) %>%
arrange(., by = EventId)
write.csv(x = Full.Final,
file = 'Full_Final.csv',
row.names = FALSE
)
s.prob.reduced = select(s.prob.reduced, -1)
# replace S.Probability column with RankOrder column for submission
Reduced.Final = arrange(s.prob.reduced, by = S.Probability) %>%
mutate(., RankOrder = seq(1, nrow(s.prob.reduced))) %>%
mutate(., Class = ifelse(S.Probability > 0.50, 's', 'b')) %>%
select(., c(EventId,
RankOrder,
Class)
) %>%
arrange(., by = EventId)
write.csv(x = Reduced.Final,
file = 'Reduced_Final.csv',
row.names = FALSE
)
s.prob.reduced = read.table(file = 'S.Prob.Reduce.csv',
header = TRUE,
sep = ',',
stringsAsFactors = FALSE
)
# get rid of extra column
s.prob.reduced = select(s.prob.reduced, -1)
# replace S.Probability column with RankOrder column for submission
Reduced.Final = arrange(s.prob.reduced, by = S.Probability) %>%
mutate(., RankOrder = seq(1, nrow(s.prob.reduced))) %>%
mutate(., Class = ifelse(S.Probability > 0.50, 's', 'b')) %>%
select(., c(EventId,
RankOrder,
Class)
) %>%
arrange(., by = EventId)
write.csv(x = Reduced.Final,
file = 'Reduced_Final.csv',
row.names = FALSE
)
s.prob.reduced = read.table(file = 'S.Prob.Reduce.csv',
header = TRUE,
sep = ',',
stringsAsFactors = FALSE
)
# get rid of extra column
s.prob.reduced = select(s.prob.reduced, -1)
# replace S.Probability column with RankOrder column for submission
Reduced.Final = arrange(s.prob.reduced, by = S.Probability) %>%
mutate(., RankOrder = seq(1, nrow(s.prob.reduced))) %>%
mutate(., Class = ifelse(S.Probability > 0.75, 's', 'b')) %>%
select(., c(EventId,
RankOrder,
Class)
) %>%
arrange(., by = EventId)
write.csv(x = Reduced.Final,
file = 'Reduced_Final.csv',
row.names = FALSE
)
nrow(M1)
load("~/Desktop/projects/Kaggle/code/kaggle.RData")
40000 + 4429 + 7562
(40000 + 4429 + 7562)/250000
